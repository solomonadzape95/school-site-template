// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Applicant {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  
  // Student Information
  surname String
  otherNames String
  gender String
  dateOfBirth DateTime
  placeOfBirth String
  stateOfOrigin String
  nationality String
  religion String
  residentialAddress String
  presentSchool String?
  currentClass String?
  bloodGroup String?
  genotype String?
  
  // Parents Information
  fatherName String
  fatherOccupation String
  fatherPhone String
  fatherEmail String?
  motherName String
  motherOccupation String
  motherPhone String
  motherEmail String?
  
  // Guardian Information (optional)
  guardianName String?
  guardianAddress String?
  guardianOccupation String?
  guardianHomePhone String?
  guardianOfficePhone String?
  guardianEmail String?
  
  // Siblings Information
  hasSiblingsInLASA String
  sibling1Name String?
  sibling1Class String?
  sibling2Name String?
  sibling2Class String?
  
  // Referral Information
  referralSource String?
  referredByParent String?
  referredByStaff String?
  referredByAlumni String?
  referredByOthers String?
  
  // Application Status
  status String @default("pending") // pending, accepted, rejected
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  content String
  slug String @unique
  imageUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tag String?
  isPublished Boolean @default(false)
  author String?
}

model Event {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  date DateTime
  description String
  expectedAttendance String?
  location String
  slug String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageUrl String?
}

model Image {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique
  imageUrl String
  usedAt String[] @default([])
  fileSize Int // Size in bytes
  mimeType String
  isDefault Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  email String @unique
  password String
  role String @default("admin") // admin, super_admin
  createdAt DateTime @default(now())
  lastLogin DateTime?
}